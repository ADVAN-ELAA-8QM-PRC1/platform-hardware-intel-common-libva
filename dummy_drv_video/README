How to enable dummy driver:

1, Purpose:
When debug some video bugs, for example repeat camera recoding, video decode, encode, camera, display, 3d are all run together. So it is difficult to identify the mistaken module. For such kind of problem, dummy decode driver can be used to bypass video decoding.

2, Steps:
2.a Apply libmix.patch in the Appendix.
	This patch will let video decode call vaInitialize_dummy instead of vaInitialize.
2.b change Android.mk-dummy to Android.mk in dummy_drv_video folder, mm to compile libdummy_drv_video.so
	adb push libdummy_drv_video.so /system/lib
	To help debug, you can enable "static int dummy_trace_enable = 1" in dummy_drv_video.c.
2.c get one nv12 file from Fei Jiang, named test_nv12.yuv, adb push test_nv12.yuv /sdcard/, the nv12 resolution is 720x480.
	If you don't put the nv12 file, the displayed surface would be solid color.
2.d then you can run gallery or camera recoding, instead of decoding the clip you touched, will directly get nv12 data from test_nv12.yuv to display or return as thumbernail.

3, Appendix:
3.a: libmix.patch

diff --git a/videodecoder/Android.mk b/videodecoder/Android.mk
index 5bde2ce..fb0df25 100644
--- a/videodecoder/Android.mk
+++ b/videodecoder/Android.mk
@@ -26,8 +26,8 @@ LOCAL_SHARED_LIBRARIES := \
     libmixvbp \
     libva \
     libva-android \
-    libva-tpi
-
+    libva-tpi \
+       libdummy_drv_video

 #LOCAL_CFLAGS += -DANDROID

diff --git a/videodecoder/VideoDecoderBase.cpp b/videodecoder/VideoDecoderBase.cpp
index d5a47dd..93a6a65 100644
--- a/videodecoder/VideoDecoderBase.cpp
+++ b/videodecoder/VideoDecoderBase.cpp
@@ -28,6 +28,11 @@
 #include <va/va_android.h>
 #include <va/va_tpi.h>

+#define DUMMY_DRV_VIDEO 1
+#ifdef DUMMY_DRV_VIDEO
+#include <dummy_drv_video/va_dummy.h>
+#endif
+
 #define INVALID_PTS ((uint64_t)-1)
 #define MAXIMUM_POC  0x7FFFFFFF
 #define MINIMUM_POC  0x80000000
@@ -742,7 +747,11 @@ Decode_Status VideoDecoderBase::setupVA(int32_t numSurface, VAProfile profile) {
     }

     int majorVersion, minorVersion;
+#ifdef DUMMY_DRV_VIDEO
+       vaStatus = vaInitialize_dummy(mVADisplay, &majorVersion, &minorVersion);
+#else
     vaStatus = vaInitialize(mVADisplay, &majorVersion, &minorVersion);
+#endif
     CHECK_VA_STATUS("vaInitialize");

     if (mConfigBuffer.frameRate > 45 && mVideoFormatInfo.height >= 1080) {


